"""adding Tag, Taggable and UserTagRole models

Revision ID: c2b50c41b3df
Revises: ebd5f1823b5e
Create Date: 2024-07-30 08:46:46.174959

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "c2b50c41b3df"
down_revision: Union[str, None] = "ebd5f1823b5e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "taggable",
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("taggable_id", sa.Integer(), nullable=False),
        sa.Column(
            "taggable_type", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.id"],
        ),
        sa.PrimaryKeyConstraint("tag_id", "taggable_id", "taggable_type"),
    )
    op.create_table(
        "user_tag_role",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("usertagrole")
    op.drop_table("taggable")
    op.drop_table("tag")
    # ### end Alembic commands ###
